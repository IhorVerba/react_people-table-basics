{"version":3,"sources":["App.tsx","api.ts","stores/PeopleContext.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/Loader/PersonLink.tsx","components/Loader/PeopleTable.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","isActive","classNames","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","initState","people","isLoading","loadingError","PeopleContext","React","PeopleProvider","children","useState","setPeople","setIsLoading","setLoadingError","useEffect","catch","finally","state","Provider","value","HomePage","NotFoundPage","Loader","PersonLink","person","name","slug","sex","PeopleTable","useParams","getParent","parentName","find","parent","map","born","died","motherName","fatherName","PeoplePage","useContext","length","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.536fee70.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive });\n  };\n\n  return (\n\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getLinkClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nconst initState = {\n  people: [] as Person[],\n  isLoading: false,\n  loadingError: false,\n};\n\nexport const PeopleContext = React.createContext(initState);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const state = {\n    people,\n    isLoading,\n    loadingError,\n  };\n\n  return (\n    <PeopleContext.Provider value={state}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <NavLink\n      to={slug}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const getParent = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parentName = people.find(parent => parent.name === name);\n\n    if (parentName) {\n      return (\n        <PersonLink person={parentName} />\n      );\n    }\n\n    return name;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getParent(person.motherName)}</td>\n            <td>{getParent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../stores/PeopleContext';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/Loader/PeopleTable';\n\nexport const PeoplePage = () => {\n  const { people, isLoading, loadingError } = useContext(PeopleContext);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !loadingError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeopleProvider } from './stores/PeopleContext';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <PeopleProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </PeopleProvider>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}